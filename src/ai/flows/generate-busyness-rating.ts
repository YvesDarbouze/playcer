// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates a busyness rating for a pickleball court based on user reviews.
 *
 * - generateBusynessRating - A function that generates the busyness rating.
 * - GenerateBusynessRatingInput - The input type for the generateBusynessRating function.
 * - GenerateBusynessRatingOutput - The return type for the generateBusynessRating function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBusynessRatingInputSchema = z.object({
  reviews: z.array(
    z.string().describe('A user review for the pickleball court.')
  ).describe('The reviews to analyze for busyness.')
});
export type GenerateBusynessRatingInput = z.infer<typeof GenerateBusynessRatingInputSchema>;

const GenerateBusynessRatingOutputSchema = z.object({
  busynessRating: z.number()
    .min(0)
    .max(5)
    .describe('The busyness rating of the court, from 0 (not busy) to 5 (very busy).'),
  summary: z.string().describe('A short summary of why the court received this busyness rating.')
});
export type GenerateBusynessRatingOutput = z.infer<typeof GenerateBusynessRatingOutputSchema>;

export async function generateBusynessRating(input: GenerateBusynessRatingInput): Promise<GenerateBusynessRatingOutput> {
  return generateBusynessRatingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateBusynessRatingPrompt',
  input: {schema: GenerateBusynessRatingInputSchema},
  output: {schema: GenerateBusynessRatingOutputSchema},
  prompt: `You are an AI expert at summarizing user reviews to assess the busyness of a pickleball court.

  Given the following user reviews, generate a busyness rating from 0 (not busy) to 5 (very busy) and provide a short explanation for the rating.

  Reviews:
  {{#each reviews}}
  - {{{this}}}
  {{/each}}

  Respond with a busyness rating (0-5) and a short summary of why the court received this rating.
  `,
});

const generateBusynessRatingFlow = ai.defineFlow(
  {
    name: 'generateBusynessRatingFlow',
    inputSchema: GenerateBusynessRatingInputSchema,
    outputSchema: GenerateBusynessRatingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
