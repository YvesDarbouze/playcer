// This is an autogenerated file from Firebase Studio. Do not edit.
import { GameList } from "@/components/game-list";
import type { Game } from '@/types';

// This is a server component, so we can fetch data here.
async function getGames(): Promise<Game[]> {
    // In a real application, you should handle errors and loading states.
    // For this example, we'll return an empty array if the API key is missing to avoid errors.
    if (!process.env.NEXT_PUBLIC_ODDS_API_KEY || process.env.NEXT_PUBLIC_ODDS_API_KEY === 'YOUR_ODDS_API_KEY') {
        console.warn("NEXT_PUBLIC_ODDS_API_KEY is not set. Using mock data.");
        return [];
    }

    const sports = ['americanfootball_nfl', 'basketball_nba', 'baseball_mlb'];
    const allGames: Game[] = [];

    try {
        for (const sport of sports) {
            const res = await fetch(
                `https://api.the-odds-api.com/v4/sports/${sport}/odds/?regions=us&markets=h2h,spreads&oddsFormat=american&apiKey=${process.env.NEXT_PUBLIC_ODDS_API_KEY}`
            );

            if (!res.ok) {
                console.error(`Failed to fetch data for ${sport}: ${res.statusText}`);
                continue; // Skip to the next sport
            }
            
            const games = await res.json();
            allGames.push(...games);
        }
        return allGames;
    } catch (error) {
        console.error("Error fetching game data:", error);
        return []; // Return empty array on error
    }
}


export default async function Home() {
    const games = await getGames();

    return (
        <main className="bg-background text-foreground">
            <div className="container mx-auto px-4 py-8">
                <GameList initialGames={games} />
            </div>
        </main>
    );
}
