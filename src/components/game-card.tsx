// This is an autogenerated file from Firebase Studio. Do not edit.
"use client";

import * as React from 'react';
import { format } from 'date-fns';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Button } from './ui/button';
import { Swords } from 'lucide-react';
import { BetCreationModal } from './bet-creation-modal';
import type { Game } from '@/types';
import { useAuth } from '@/hooks/use-auth';
import { useToast } from '@/hooks/use-toast';
import { LoginButton } from './login-button';

interface GameCardProps {
    game: Game;
}

export function GameCard({ game }: GameCardProps) {
    const [isModalOpen, setIsModalOpen] = React.useState(false);
    const { user, loading } = useAuth();
    const { toast } = useToast();
    const gameTime = new Date(game.commence_time);

    const handleCreateBetClick = () => {
        if (!user && !loading) {
             toast({
                title: "Authentication Required",
                description: (
                    <div className="flex flex-col gap-4 items-center">
                        <p>You must be logged in to create a bet.</p>
                        <LoginButton />
                    </div>
                ),
            });
        } else if (user) {
            setIsModalOpen(true);
        }
    };

    return (
        <>
            <Card className="hover:shadow-lg transition-shadow duration-200 flex flex-col">
                <CardHeader>
                    <CardDescription>{game.sport_title}</CardDescription>
                    <CardTitle className="text-xl font-bold">{game.away_team} @ {game.home_team}</CardTitle>
                </CardHeader>
                <CardContent className="flex justify-between items-center mt-auto">
                    <div>
                        <p className="text-sm text-muted-foreground">
                            {format(gameTime, "EEE, MMM d, yyyy")}
                        </p>
                        <p className="text-sm font-semibold">
                            {format(gameTime, "h:mm a")}
                        </p>
                    </div>
                    <Button onClick={handleCreateBetClick} disabled={loading}>
                        <Swords className="mr-2 h-4 w-4" />
                        {loading ? 'Checking Auth...' : 'Create Bet'}
                    </Button>
                </CardContent>
            </Card>
            {user && (
                 <BetCreationModal
                    isOpen={isModalOpen}
                    onOpenChange={setIsModalOpen}
                    game={game}
                />
            )}
        </>
    );
}
