
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Bets can be read by anyone if they are public.
    // A user can create a bet only if they are the challenger.
    // A user can update a bet (to accept it) only if they are the recipient.
    // Once a bet is active, it cannot be modified by users.
    match /bets/{betId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.challengerId == request.auth.uid;
      allow update: if request.auth != null 
                    && resource.data.status == 'pending_acceptance'
                    && request.resource.data.recipientId == request.auth.uid;
    }
    
    // Games and their odds can be read by anyone. Writes are handled by backend functions.
    match /games/{gameId} {
      allow read: if true;
      allow write: if false;

      match /bookmaker_odds/{bookmakerId} {
        allow read: if true;
        allow write: if false;
      }
    }

    // Transactions can only be read by the user involved. Writes are handled by backend functions.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if false;
    }

    // Admin-only collections
    match /disputes/{disputeId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
