
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read public data on any profile, but only update their own.
    // Wallet balance and sensitive info is not readable/writable from the client.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
      allow create, delete: if false; 
    }
    
    // Bets can be created by any authenticated user.
    // Bets can be read by anyone if public, or by the parties involved.
    // Bets can only be updated (accepted) by the intended recipient (taker).
    match /bets/{betId} {
      allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.takerId;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.takerId && request.resource.data.status == 'accepted';
      allow delete: if false;
    }

    // Games and their odds are public information.
    // They are only ever written by a backend process, so client-side writes are disallowed.
    match /games/{gameId} {
      allow read: if true;
      allow write: if false;

      match /bookmaker_odds/{bookmakerKey} {
        allow read: if true;
        allow write: if false;
      }
    }
    
    // A user can only access their own transaction history.
    match /transactions/{transactionId} {
        allow read, list: if request.auth.uid == resource.data.userId;
        allow write: if false;
    }
    
    // A user can only access their own notifications
    match /users/{userId}/notifications/{notificationId} {
        allow read, list, update: if request.auth.uid == userId;
        allow create, delete: if false;
    }
    
    // Disputes can only be read/written by admins (via backend functions)
    match /disputes/{disputeId} {
        allow read, write: if false;
    }
  }
}
