
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own user document.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Bets can be read by anyone.
    // Bets can only be created by an authenticated user whose UID matches the challengerId.
    // Bets can only be updated (e.g., to accept) by an authenticated user.
    // Deleting bets is not allowed from the client.
    match /bets/{betId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.challengerId == request.auth.uid;
      allow update: if request.auth != null;
      allow delete: if false;
    }

    // Transactions can only be read by the user who owns them.
    // Transactions are only created by the backend (Cloud Functions).
    match /transactions/{transactionId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userId == resource.data.userId;
      allow create, update, delete: if false;
    }
    
    // Games can be read by anyone, but only written by the backend.
    match /games/{gameId} {
        allow read;
        allow write: if false;

        match /bookmaker_odds/{bookmakerId} {
            allow read;
            allow write: if false;
        }
    }
  }
}

    