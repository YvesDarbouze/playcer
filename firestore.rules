
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read their own data. They can update their own displayName, 
    // photoURL, and other non-critical fields. 
    // Wallet balance and KYC status can only be changed by the backend.
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId
                    && request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['displayName', 'photoURL', 'responsibleGamingLimits', 'selfExclusion']);
      
      // Nobody can delete user documents through the client.
      allow delete: if false;

      // A user can read their own userBets subcollection.
      match /userBets/{betId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Bets can be read by anyone if they are public.
    // Bets can be created by any authenticated user.
    // Bets can only be updated (i.e., matched) under specific conditions.
    // Sensitive updates (like settlement) must be done by the backend.
    match /bets/{betId} {
      allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.challengerId;
      allow create: if request.auth != null;
      allow update: if request.auth != null
                     // A user can accept an open bet if they are not the creator
                     && resource.data.status == 'open'
                     && request.resource.data.status == 'matched'
                     && request.resource.data.challengerId == request.auth.uid
                     && resource.data.creatorId != request.auth.uid;
      
      // Nobody can delete bets through the client.
      allow delete: if false;
    }

    // Transactions are immutable logs. They can only be created by the backend.
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow write: if false; // Can only be created by backend functions
    }

    // Disputes can be read by involved parties or admins.
    // They can only be written to by involved parties under certain conditions.
    match /disputes/{disputeId} {
       allow read: if request.auth.uid == resource.data.creatorId 
                   || request.auth.uid == resource.data.takerId 
                   || request.auth.token.admin == true;
       allow create: if request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.takerId;
       allow update: if request.auth.token.admin == true; // Only admins can update/resolve disputes
       allow delete: if false;
    }
  }
}
