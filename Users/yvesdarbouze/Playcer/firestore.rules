
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read public profiles, but only write to their own.
    match /users/{userId} {
      allow read;
      allow update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Games: Publicly readable, but not writable from the client.
    match /games/{gameId} {
      allow read;

      // Odds for each game should also be publicly readable
      match /bookmaker_odds/{bookmakerId} {
        allow read;
      }
    }

    // Bets: Complex rules for creation, matching, and viewing.
    match /bets/{betId} {
      // Anyone can read a public bet.
      allow get: if resource.data.isPublic == true;
      // Logged-in users can read their own private bets.
      allow get: if request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.takerId;
      // Logged-in users can create bets.
      allow create: if request.auth.uid != null;
      // Only the designated taker can accept a bet.
      allow update: if request.auth.uid == resource.data.takerId && request.resource.data.status == 'accepted';
    }

    // Transactions: Users can only see their own.
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId;
    }

    // Disputes: Only involved parties can create, admins can manage.
    match /disputes/{disputeId} {
        allow create: if request.auth.uid == request.resource.data.disputingUserId;
        allow read, update: if request.auth.token.admin == true; // Admins can manage
    }
  }
}
