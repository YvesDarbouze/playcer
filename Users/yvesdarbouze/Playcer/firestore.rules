
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users:
    // - Anyone can read a user's public profile.
    // - Only the user themselves can write to their own document.
    match /users/{userId} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Games & Odds:
    // - Any authenticated user can read the list of games and the odds for each game.
    // - Writes should only be done from a trusted server environment (e.g., Cloud Functions).
    match /games/{gameId} {
      allow read: if request.auth != null;

      match /bookmaker_odds/{bookmakerId} {
        allow read: if request.auth != null;
      }
    }
    
    // Bets:
    // - Authenticated users can read public bets.
    // - Authenticated users can read bets they are a part of (creator or challenger).
    // - Only authenticated users can create bets.
    // - Only the bet creator can modify a bet before it's matched.
    // - The bet document is locked after being matched.
    match /bets/{betId} {
      allow read: if request.auth != null && (resource.data.isPublic == true || request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.challengerId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.creatorId && resource.data.challengerId == null;
    }

    // User-specific subcollections
    match /users/{userId}/{subcollection}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Transactions should be read-only for the user they belong to.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
