
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own profile and limited public data of others.
    // Users can only update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Games and their odds are public information, readable by anyone.
    // Only backend services should write to this collection.
    match /games/{gameId} {
      allow read: if true;
      allow write: if false; // Managed by backend functions

      match /bookmaker_odds/{bookmakerId} {
        allow read: if true;
        allow write: if false; // Managed by backend functions
      }
    }

    // Bets have more complex rules.
    match /bets/{betId} {
      // Allow creation by any authenticated user.
      allow create: if request.auth != null;

      // Allow reads if user is creator/taker, or if it's a public bet in the marketplace.
      allow read: if request.auth != null && 
                    (resource.data.creatorId == request.auth.uid || 
                     resource.data.takerId == request.auth.uid ||
                     (resource.data.isPublic == true && resource.data.status == 'pending'));

      // Allow taker to accept the bet. Other updates are handled by backend.
      allow update: if request.auth != null &&
                     request.auth.uid == request.resource.data.takerId &&
                     resource.data.takerId == null; // Can only be accepted once
    }

    // Transactions are private to each user.
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
