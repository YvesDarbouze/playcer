
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profile info, but only write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Game data is public, but only backend can write to it.
    match /games/{gameId} {
      allow read: if true;
      allow write: if false; // Only backend services can write
      
      // Odds data is also public
      match /bookmaker_odds/{bookmakerId} {
        allow read: if true;
        allow write: if false; // Only backend services can write
      }
    }
    
    match /bets/{betId} {
      // Allow creation of a bet if the user is authenticated
      allow create: if request.auth != null;
      
      // Allow read access if:
      // 1. The bet is public
      // 2. The user is the creator of the bet
      // 3. The user is the taker of the bet
      allow read: if request.auth != null && 
                    (resource.data.isPublic == true || 
                     request.auth.uid == resource.data.creatorId || 
                     request.auth.uid == resource.data.takerId);
      
      // Allow updates only by the intended taker to accept the bet
      allow update: if request.auth != null && 
                      request.auth.uid == request.resource.data.takerId && 
                      resource.data.takerId == null;
                      
      // Disallow direct deletion from clients
      allow delete: if false;
    }

    // Users can only read their own transactions. No client-side writes.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create, update, delete: if false;
    }
  }
}
