
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users: Can only read their own document. Writes are disabled from the client.
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow create, update, delete: if false; // All writes must be done by the backend
    }
    
    // Notifications: Users can manage their own notifications.
    match /users/{userId}/notifications/{notificationId} {
       allow read, write: if isSignedIn() && isOwner(userId);
    }

    // Games and their subcollections (e.g., bookmaker_odds) are read-only for clients.
    match /games/{gameId} {
      allow read: if isSignedIn();
      allow write: if false; // All game data is written by the backend stream
      
      match /bookmaker_odds/{bookmakerId} {
         allow read: if isSignedIn();
         allow write: if false;
      }
    }

    // Bets: Read-only for clients. All modifications must go through Cloud Functions.
    match /bets/{betId} {
      allow read: if isSignedIn();
      // Complex write logic (create, accept, settle, cancel) is handled by secure Cloud Functions.
      // Disallow all client-side writes to prevent tampering with bet status, amounts, or participants.
      allow create, update, delete: if false;
    }
    
    // Transactions: Users can only read their own financial history. Writes are disabled.
    match /transactions/{txId} {
        allow read: if isSignedIn() && isOwner(resource.data.userId);
        allow write: if false; // All transactions are created by the backend.
    }
    
    // Disputes: Users can create disputes. Reading/updating them is an admin task.
    match /disputes/{disputeId} {
        // Allow a user to create a dispute if they are part of the bet.
        // This requires reading the bet document to verify.
        allow create: if isSignedIn(); 
        
        // Only admins (via backend) should read or resolve disputes.
        // For simplicity, we deny client reads here. Admins will use the Admin SDK.
        allow read, update, delete: if false;
    }
  }
}
